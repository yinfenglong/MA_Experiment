//#line 2 "/opt/ros/melodic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
//
// File autogenerated for the itm_nonlinear_mpc package
// by the dynamic_reconfigure package.
// Please do not edit.
//
// ********************************************************/

#ifndef __itm_nonlinear_mpc__NONLINEARMPCCONFIG_H__
#define __itm_nonlinear_mpc__NONLINEARMPCCONFIG_H__

#if __cplusplus >= 201103L
#define DYNAMIC_RECONFIGURE_FINAL final
#else
#define DYNAMIC_RECONFIGURE_FINAL
#endif

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace itm_nonlinear_mpc
{
  class NonLinearMPCConfigStatics;

  class NonLinearMPCConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l,
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }

      virtual void clamp(NonLinearMPCConfig &config, const NonLinearMPCConfig &max, const NonLinearMPCConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const NonLinearMPCConfig &config1, const NonLinearMPCConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, NonLinearMPCConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const NonLinearMPCConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, NonLinearMPCConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const NonLinearMPCConfig &config) const = 0;
      virtual void getValue(const NonLinearMPCConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template <class T>
    class ParamDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level,
          std::string a_description, std::string a_edit_method, T NonLinearMPCConfig::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T NonLinearMPCConfig::* field;

      virtual void clamp(NonLinearMPCConfig &config, const NonLinearMPCConfig &max, const NonLinearMPCConfig &min) const
      {
        if (config.*field > max.*field)
          config.*field = max.*field;

        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const NonLinearMPCConfig &config1, const NonLinearMPCConfig &config2) const
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, NonLinearMPCConfig &config) const
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const NonLinearMPCConfig &config) const
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, NonLinearMPCConfig &config) const
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const NonLinearMPCConfig &config) const
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const NonLinearMPCConfig &config, boost::any &val) const
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, NonLinearMPCConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template<class T, class PT>
    class GroupDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, NonLinearMPCConfig &top) const
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T PT::* field;
      std::vector<NonLinearMPCConfig::AbstractGroupDescriptionConstPtr> groups;
    };

class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(NonLinearMPCConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("q_x"==(*_i)->name){q_x = boost::any_cast<double>(val);}
        if("q_y"==(*_i)->name){q_y = boost::any_cast<double>(val);}
        if("q_z"==(*_i)->name){q_z = boost::any_cast<double>(val);}
        if("q_vx"==(*_i)->name){q_vx = boost::any_cast<double>(val);}
        if("q_vy"==(*_i)->name){q_vy = boost::any_cast<double>(val);}
        if("q_vz"==(*_i)->name){q_vz = boost::any_cast<double>(val);}
        if("q_roll"==(*_i)->name){q_roll = boost::any_cast<double>(val);}
        if("q_pitch"==(*_i)->name){q_pitch = boost::any_cast<double>(val);}
        if("r_roll"==(*_i)->name){r_roll = boost::any_cast<double>(val);}
        if("r_pitch"==(*_i)->name){r_pitch = boost::any_cast<double>(val);}
        if("r_thrust"==(*_i)->name){r_thrust = boost::any_cast<double>(val);}
        if("roll_max"==(*_i)->name){roll_max = boost::any_cast<double>(val);}
        if("pitch_max"==(*_i)->name){pitch_max = boost::any_cast<double>(val);}
        if("yaw_rate_max"==(*_i)->name){yaw_rate_max = boost::any_cast<double>(val);}
        if("thrust_min"==(*_i)->name){thrust_min = boost::any_cast<double>(val);}
        if("thrust_max"==(*_i)->name){thrust_max = boost::any_cast<double>(val);}
        if("K_yaw"==(*_i)->name){K_yaw = boost::any_cast<double>(val);}
        if("Ki_xy"==(*_i)->name){Ki_xy = boost::any_cast<double>(val);}
        if("Ki_altitude"==(*_i)->name){Ki_altitude = boost::any_cast<double>(val);}
        if("enable_offset_free"==(*_i)->name){enable_offset_free = boost::any_cast<bool>(val);}
        if("enable_integrator"==(*_i)->name){enable_integrator = boost::any_cast<bool>(val);}
      }
    }

    double q_x;
double q_y;
double q_z;
double q_vx;
double q_vy;
double q_vz;
double q_roll;
double q_pitch;
double r_roll;
double r_pitch;
double r_thrust;
double roll_max;
double pitch_max;
double yaw_rate_max;
double thrust_min;
double thrust_max;
double K_yaw;
double Ki_xy;
double Ki_altitude;
bool enable_offset_free;
bool enable_integrator;

    bool state;
    std::string name;

    
}groups;



//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double q_x;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double q_y;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double q_z;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double q_vx;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double q_vy;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double q_vz;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double q_roll;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double q_pitch;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double r_roll;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double r_pitch;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double r_thrust;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double roll_max;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double pitch_max;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double yaw_rate_max;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double thrust_min;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double thrust_max;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double K_yaw;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double Ki_xy;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double Ki_altitude;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool enable_offset_free;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool enable_integrator;
//#line 228 "/opt/ros/melodic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("NonLinearMPCConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }

    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }

    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const NonLinearMPCConfig &__max__ = __getMax__();
      const NonLinearMPCConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const NonLinearMPCConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }

    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const NonLinearMPCConfig &__getDefault__();
    static const NonLinearMPCConfig &__getMax__();
    static const NonLinearMPCConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();

  private:
    static const NonLinearMPCConfigStatics *__get_statics__();
  };

  template <> // Max and min are ignored for strings.
  inline void NonLinearMPCConfig::ParamDescription<std::string>::clamp(NonLinearMPCConfig &config, const NonLinearMPCConfig &max, const NonLinearMPCConfig &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class NonLinearMPCConfigStatics
  {
    friend class NonLinearMPCConfig;

    NonLinearMPCConfigStatics()
    {
NonLinearMPCConfig::GroupDescription<NonLinearMPCConfig::DEFAULT, NonLinearMPCConfig> Default("Default", "", 0, 0, true, &NonLinearMPCConfig::groups);
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.q_x = 0.001;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.q_x = 200.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.q_x = 50.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("q_x", "double", 0, "Penality on x axis pos", "", &NonLinearMPCConfig::q_x)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("q_x", "double", 0, "Penality on x axis pos", "", &NonLinearMPCConfig::q_x)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.q_y = 0.001;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.q_y = 200.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.q_y = 50.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("q_y", "double", 0, "Penality on y axis pos", "", &NonLinearMPCConfig::q_y)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("q_y", "double", 0, "Penality on y axis pos", "", &NonLinearMPCConfig::q_y)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.q_z = 0.001;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.q_z = 200.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.q_z = 80.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("q_z", "double", 0, "Penality on z axis pos", "", &NonLinearMPCConfig::q_z)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("q_z", "double", 0, "Penality on z axis pos", "", &NonLinearMPCConfig::q_z)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.q_vx = 0.001;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.q_vx = 200.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.q_vx = 20.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("q_vx", "double", 0, "Penality on x axis vel", "", &NonLinearMPCConfig::q_vx)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("q_vx", "double", 0, "Penality on x axis vel", "", &NonLinearMPCConfig::q_vx)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.q_vy = 0.001;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.q_vy = 200.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.q_vy = 20.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("q_vy", "double", 0, "Penality on y axis vel", "", &NonLinearMPCConfig::q_vy)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("q_vy", "double", 0, "Penality on y axis vel", "", &NonLinearMPCConfig::q_vy)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.q_vz = 0.001;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.q_vz = 200.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.q_vz = 35.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("q_vz", "double", 0, "Penality on z axis vel", "", &NonLinearMPCConfig::q_vz)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("q_vz", "double", 0, "Penality on z axis vel", "", &NonLinearMPCConfig::q_vz)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.q_roll = 0.001;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.q_roll = 200.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.q_roll = 20.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("q_roll", "double", 0, "Penality on roll state", "", &NonLinearMPCConfig::q_roll)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("q_roll", "double", 0, "Penality on roll state", "", &NonLinearMPCConfig::q_roll)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.q_pitch = 0.001;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.q_pitch = 200.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.q_pitch = 20.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("q_pitch", "double", 0, "Penality on pitch state", "", &NonLinearMPCConfig::q_pitch)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("q_pitch", "double", 0, "Penality on pitch state", "", &NonLinearMPCConfig::q_pitch)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.r_roll = 1.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.r_roll = 200.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.r_roll = 30.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("r_roll", "double", 0, "Penality on roll cmd", "", &NonLinearMPCConfig::r_roll)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("r_roll", "double", 0, "Penality on roll cmd", "", &NonLinearMPCConfig::r_roll)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.r_pitch = 1.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.r_pitch = 200.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.r_pitch = 30.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("r_pitch", "double", 0, "Penality on pitch cmd", "", &NonLinearMPCConfig::r_pitch)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("r_pitch", "double", 0, "Penality on pitch cmd", "", &NonLinearMPCConfig::r_pitch)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.r_thrust = 1.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.r_thrust = 200.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.r_thrust = 5.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("r_thrust", "double", 0, "Penality on thrust cmd", "", &NonLinearMPCConfig::r_thrust)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("r_thrust", "double", 0, "Penality on thrust cmd", "", &NonLinearMPCConfig::r_thrust)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.roll_max = 0.1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.roll_max = 1.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.roll_max = 0.45;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("roll_max", "double", 0, "max roll cmd [rad]", "", &NonLinearMPCConfig::roll_max)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("roll_max", "double", 0, "max roll cmd [rad]", "", &NonLinearMPCConfig::roll_max)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.pitch_max = 0.1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.pitch_max = 1.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.pitch_max = 0.45;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("pitch_max", "double", 0, "max pitch cmd [rad]", "", &NonLinearMPCConfig::pitch_max)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("pitch_max", "double", 0, "max pitch cmd [rad]", "", &NonLinearMPCConfig::pitch_max)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.yaw_rate_max = 0.1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.yaw_rate_max = 2.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.yaw_rate_max = 1.5;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("yaw_rate_max", "double", 0, "max yawrate cmd [rad/s]", "", &NonLinearMPCConfig::yaw_rate_max)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("yaw_rate_max", "double", 0, "max yawrate cmd [rad/s]", "", &NonLinearMPCConfig::yaw_rate_max)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.thrust_min = 5.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.thrust_min = 25.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.thrust_min = 5.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("thrust_min", "double", 0, "min thrust cmd [m/s2]", "", &NonLinearMPCConfig::thrust_min)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("thrust_min", "double", 0, "min thrust cmd [m/s2]", "", &NonLinearMPCConfig::thrust_min)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.thrust_max = 5.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.thrust_max = 25.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.thrust_max = 15.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("thrust_max", "double", 0, "max thrust cmd [m/s2]", "", &NonLinearMPCConfig::thrust_max)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("thrust_max", "double", 0, "max thrust cmd [m/s2]", "", &NonLinearMPCConfig::thrust_max)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.K_yaw = 0.01;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.K_yaw = 2.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.K_yaw = 0.5;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("K_yaw", "double", 0, "yaw gain", "", &NonLinearMPCConfig::K_yaw)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("K_yaw", "double", 0, "yaw gain", "", &NonLinearMPCConfig::K_yaw)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.Ki_xy = 0.01;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.Ki_xy = 3.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.Ki_xy = 0.2;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("Ki_xy", "double", 0, "integrator gain for xy", "", &NonLinearMPCConfig::Ki_xy)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("Ki_xy", "double", 0, "integrator gain for xy", "", &NonLinearMPCConfig::Ki_xy)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.Ki_altitude = 0.01;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.Ki_altitude = 3.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.Ki_altitude = 0.2;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("Ki_altitude", "double", 0, "integrator gain for altitude", "", &NonLinearMPCConfig::Ki_altitude)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<double>("Ki_altitude", "double", 0, "integrator gain for altitude", "", &NonLinearMPCConfig::Ki_altitude)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.enable_offset_free = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.enable_offset_free = 1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.enable_offset_free = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<bool>("enable_offset_free", "bool", 0, "XY offset free MPC", "", &NonLinearMPCConfig::enable_offset_free)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<bool>("enable_offset_free", "bool", 0, "XY offset free MPC", "", &NonLinearMPCConfig::enable_offset_free)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.enable_integrator = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.enable_integrator = 1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.enable_integrator = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<bool>("enable_integrator", "bool", 0, "integral action", "", &NonLinearMPCConfig::enable_integrator)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(NonLinearMPCConfig::AbstractParamDescriptionConstPtr(new NonLinearMPCConfig::ParamDescription<bool>("enable_integrator", "bool", 0, "integral action", "", &NonLinearMPCConfig::enable_integrator)));
//#line 246 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 246 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(NonLinearMPCConfig::AbstractGroupDescriptionConstPtr(new NonLinearMPCConfig::GroupDescription<NonLinearMPCConfig::DEFAULT, NonLinearMPCConfig>(Default)));
//#line 366 "/opt/ros/melodic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<NonLinearMPCConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__);
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__);
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__);
    }
    std::vector<NonLinearMPCConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<NonLinearMPCConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    NonLinearMPCConfig __max__;
    NonLinearMPCConfig __min__;
    NonLinearMPCConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const NonLinearMPCConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static NonLinearMPCConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &NonLinearMPCConfig::__getDescriptionMessage__()
  {
    return __get_statics__()->__description_message__;
  }

  inline const NonLinearMPCConfig &NonLinearMPCConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }

  inline const NonLinearMPCConfig &NonLinearMPCConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }

  inline const NonLinearMPCConfig &NonLinearMPCConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }

  inline const std::vector<NonLinearMPCConfig::AbstractParamDescriptionConstPtr> &NonLinearMPCConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<NonLinearMPCConfig::AbstractGroupDescriptionConstPtr> &NonLinearMPCConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const NonLinearMPCConfigStatics *NonLinearMPCConfig::__get_statics__()
  {
    const static NonLinearMPCConfigStatics *statics;

    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = NonLinearMPCConfigStatics::get_instance();

    return statics;
  }


}

#undef DYNAMIC_RECONFIGURE_FINAL

#endif // __NONLINEARMPCRECONFIGURATOR_H__
